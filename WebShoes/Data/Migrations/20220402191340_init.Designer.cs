// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShoes.Data;

namespace WebShoes.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220402191340_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            RoleId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd"
                        },
                        new
                        {
                            UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            RoleId = "360E601E-92F2-4F08-832B-604A21293258"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("WebShoes.Entity.About", b =>
                {
                    b.Property<int>("about_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("about_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("about_id");

                    b.ToTable("About");

                    b.HasData(
                        new
                        {
                            about_id = 1,
                            about_Description = "The Big Oxmox advised her not to do so, because there were thousands of bad Commas, wild Question Marks and devious Semikoli, but the Little Blind Text didn’t listen. She packed her seven versalia, put her initial into the belt and made herself on the way. \n \n When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrove,the headline of Alphabet Village and the subline of her own road,the Line Lane.Pityful a rethoric question ran over her cheek,then she continued her way.",
                            about_Title = "Footwear the leading eCommerce Store around the Globe",
                            about_Url = "https://www.youtube.com/watch?v=F1vcruph8JA"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Bills", b =>
                {
                    b.Property<string>("bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_Cancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_Confirmation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("bill_DatetimeOrder")
                        .HasColumnType("datetime2");

                    b.Property<bool>("bill_Delivered")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_Delivering")
                        .HasColumnType("bit");

                    b.Property<int>("bill_Discount")
                        .HasColumnType("int");

                    b.Property<bool>("bill_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("bill_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bill_PaidTotal")
                        .HasColumnType("int");

                    b.Property<string>("bill_PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductColorlist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductIdlist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductNamelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductPricelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductSizelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bill_Shipping")
                        .HasColumnType("int");

                    b.Property<string>("bill_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_WaitForConfirmation")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_WaitPickup")
                        .HasColumnType("bit");

                    b.HasKey("bill_Id");

                    b.HasIndex("bill_UserId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            bill_Id = "D269BF93-A5E2-4C4A-8146-9967DDE80D30",
                            bill_Cancelled = false,
                            bill_Confirmation = true,
                            bill_DatetimeOrder = new DateTime(2022, 4, 3, 2, 13, 39, 406, DateTimeKind.Local).AddTicks(3538),
                            bill_Delivered = false,
                            bill_Delivering = false,
                            bill_Discount = 0,
                            bill_HideStatus = false,
                            bill_Note = "",
                            bill_PaidTotal = 2000,
                            bill_PaymentMethod = "Check Payment",
                            bill_ProductColorlist = "Blue|Red|Black|Green",
                            bill_ProductIdlist = "1|2|3|4",
                            bill_ProductNamelist = "product 1|product 2| product 3| product 4",
                            bill_ProductPricelist = "550|450|350|640",
                            bill_ProductSizelist = "7|8|9|14",
                            bill_Quantity = "1|1|2|1",
                            bill_Shipping = 10,
                            bill_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            bill_WaitForConfirmation = false,
                            bill_WaitPickup = false
                        },
                        new
                        {
                            bill_Id = "AFD66490-12F5-4EA7-BFF6-425624290D6D",
                            bill_Cancelled = false,
                            bill_Confirmation = true,
                            bill_DatetimeOrder = new DateTime(2022, 4, 3, 2, 13, 39, 408, DateTimeKind.Local).AddTicks(231),
                            bill_Delivered = false,
                            bill_Delivering = false,
                            bill_Discount = 0,
                            bill_HideStatus = false,
                            bill_Note = "",
                            bill_PaidTotal = 2100,
                            bill_PaymentMethod = "Check Payment",
                            bill_ProductColorlist = "Blue|Red|Black|Green",
                            bill_ProductIdlist = "5|6|7|8",
                            bill_ProductNamelist = "product 5|product 6| product 7| product 8",
                            bill_ProductPricelist = "550|450|350|640",
                            bill_ProductSizelist = "7|8|9|14",
                            bill_Quantity = "1|1|2|2",
                            bill_Shipping = 10,
                            bill_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            bill_WaitForConfirmation = false,
                            bill_WaitPickup = false
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Cart", b =>
                {
                    b.Property<string>("cart_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cart_Coupon")
                        .HasColumnType("int");

                    b.Property<int>("cart_Discount")
                        .HasColumnType("int");

                    b.Property<string>("cart_UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cart_Id");

                    b.HasIndex("cart_UserID");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            cart_Id = "72309286-ECBB-4D20-AD95-2819D31E3400",
                            cart_Coupon = 0,
                            cart_Discount = 0,
                            cart_UserID = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff"
                        },
                        new
                        {
                            cart_Id = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            cart_Coupon = 0,
                            cart_Discount = 0,
                            cart_UserID = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.CartsDevice", b =>
                {
                    b.Property<string>("cartd_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cartd_DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cartd_Discount")
                        .HasColumnType("int");

                    b.HasKey("cartd_Id");

                    b.HasIndex("cartd_DeviceId");

                    b.ToTable("CartsDevice");
                });

            modelBuilder.Entity("WebShoes.Entity.Categories", b =>
                {
                    b.Property<int>("cg_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cg_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cg_Sale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cg_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cg_Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            cg_Id = 1,
                            cg_Name = "women",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = 2,
                            cg_Name = "Man",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = 3,
                            cg_Name = "BestSeller",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = 4,
                            cg_Name = "TopSeller",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = 5,
                            cg_Name = "Hangbag",
                            cg_Sale = "",
                            cg_Type = ""
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.CategoriesHome", b =>
                {
                    b.Property<string>("CategoriesHomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoriesHomeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoriesHomeUrl8")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriesHomeId");

                    b.ToTable("CategoriesHome");

                    b.HasData(
                        new
                        {
                            CategoriesHomeId = "ad7731c2-1773-4cc5-9797-0235fbf8b8e0",
                            CategoriesHomeName = "CategoriesHome1",
                            CategoriesHomeUrl1 = "https://drive.google.com/uc?export=download&id=1VYldlvs2ROaTJPsE2eIkMXktOBbLHy9f",
                            CategoriesHomeUrl2 = "https://drive.google.com/uc?export=download&id=1j0uME7aL_KXY1df6AN0p8psngFdiX73K",
                            CategoriesHomeUrl3 = "https://drive.google.com/uc?export=download&id=1Gm-TZ2nqI5eUAU0O45cgeay38AS0OxiI",
                            CategoriesHomeUrl4 = "https://drive.google.com/uc?export=download&id=1g4QK9WF2e9aXHpJCUXK0-1H6j6kC7r5L",
                            CategoriesHomeUrl5 = "https://drive.google.com/uc?export=download&id=14ybZRAMDRY_OhMcCXXzVtjeyHhnaKn5l",
                            CategoriesHomeUrl6 = "https://drive.google.com/uc?export=download&id=1vOIH3t8uhGxNKF7w76kViqlmlQH1-6YU",
                            CategoriesHomeUrl7 = "https://drive.google.com/uc?export=download&id=18tu3dYEqUmKx5bJL_hjSN467GO3cbaQE",
                            CategoriesHomeUrl8 = "https://drive.google.com/uc?export=download&id=1EEMOiZF6E5sKIFGntEySd0SVvZmvFe78"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.ContactSystem", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Contact_Id");

                    b.ToTable("ContactSystems");

                    b.HasData(
                        new
                        {
                            Contact_Id = 1,
                            Contact_Address = " 123, An Lac A Ward, Binh Tan District, HCM",
                            Contact_Email = "admin@gmail.com",
                            Contact_Phone = "0123456789",
                            Contact_Website = "https://shoes.com"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.ContactUsers", b =>
                {
                    b.Property<int>("cu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cu_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cu_Id");

                    b.ToTable("ContactUsers");

                    b.HasData(
                        new
                        {
                            cu_Id = 1,
                            cu_Description = "Description",
                            cu_Email = "Email",
                            cu_FirstName = "FirstName",
                            cu_LastName = "LastName",
                            cu_Subject = "Subject"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Coupons", b =>
                {
                    b.Property<string>("couponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("couponAmount")
                        .HasColumnType("int");

                    b.Property<string>("couponCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("couponPrice")
                        .HasColumnType("int");

                    b.HasKey("couponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            couponId = "297857ae-440e-4d32-84e8-01146547198b",
                            couponAmount = 20,
                            couponCode = "code10",
                            couponPrice = 10
                        },
                        new
                        {
                            couponId = "442b9ced-2115-43ce-841a-d6861de590cd",
                            couponAmount = 25,
                            couponCode = "code50",
                            couponPrice = 50
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.CustomerHome", b =>
                {
                    b.Property<string>("CustomerHomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerHomeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerHome_CDesription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerHome_CImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerHome_CName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerHome_CStar")
                        .HasColumnType("int");

                    b.Property<string>("CustomerHome_CWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerHomeId");

                    b.ToTable("CustomerHome");

                    b.HasData(
                        new
                        {
                            CustomerHomeId = "4138f605-e350-42ec-a9f9-0aee7f813de1",
                            CustomerHomeName = "FeatureHome1",
                            CustomerHome_CDesription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vitae nunc eget leo finibus luctus et vitae lorem",
                            CustomerHome_CImg = "https://drive.google.com/uc?export=download&id=12BEbKPhMNT6Gl31Wgzo1XNA6kf5zCtYm",
                            CustomerHome_CName = "Customer 1",
                            CustomerHome_CStar = 5,
                            CustomerHome_CWork = "Profession"
                        },
                        new
                        {
                            CustomerHomeId = "d9ba3cd8-2d49-484e-961f-de3a13b893c4",
                            CustomerHomeName = "FeatureHome2",
                            CustomerHome_CDesription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vitae nunc eget leo finibus luctus et vitae lorem",
                            CustomerHome_CImg = "https://drive.google.com/uc?export=download&id=12xlH3LvPKtXEUTRFdETM7SGvCnjU9S-c",
                            CustomerHome_CName = "Customer 2",
                            CustomerHome_CStar = 5,
                            CustomerHome_CWork = "Profession"
                        },
                        new
                        {
                            CustomerHomeId = "fc318190-07ae-437e-95e2-90fb4b52b214",
                            CustomerHomeName = "FeatureHome3",
                            CustomerHome_CDesription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vitae nunc eget leo finibus luctus et vitae lorem",
                            CustomerHome_CImg = "https://drive.google.com/uc?export=download&id=1-VztC3V4O7HyIdetuemHMO61M5up94uD",
                            CustomerHome_CName = "Customer 3",
                            CustomerHome_CStar = 5,
                            CustomerHome_CWork = "Profession"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Device", b =>
                {
                    b.Property<string>("deviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("deviceAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("devicePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("devicePostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceState")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("WebShoes.Entity.FeatureHome", b =>
                {
                    b.Property<string>("FeatureHomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeatureHomeDesription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeDesription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeDesription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeDesription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeTitle1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeTitle2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeTitle3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureHomeTitle4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureHomeId");

                    b.ToTable("FeatureHome");

                    b.HasData(
                        new
                        {
                            FeatureHomeId = "a8dfa0e8-751e-4ff2-81bd-379e40c38f0b",
                            FeatureHomeDesription1 = "Lorem ipsum dolor sit amet consectetur elit",
                            FeatureHomeDesription2 = "Lorem ipsum dolor sit amet consectetur elit",
                            FeatureHomeDesription3 = "Lorem ipsum dolor sit amet consectetur elit",
                            FeatureHomeDesription4 = "Lorem ipsum dolor sit amet consectetur elit",
                            FeatureHomeName = "FeatureHome1",
                            FeatureHomeTitle1 = "Secure Payment",
                            FeatureHomeTitle2 = "Worldwide Delivery",
                            FeatureHomeTitle3 = "90 Days Return",
                            FeatureHomeTitle4 = "24/7 Support"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.ProductInCart", b =>
                {
                    b.Property<string>("pic_CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("pic_ProductId")
                        .HasColumnType("int");

                    b.Property<string>("pic_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("pic_amount")
                        .HasColumnType("int");

                    b.Property<string>("pic_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pic_size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pic_CartId", "pic_ProductId", "pic_Id");

                    b.HasIndex("pic_ProductId");

                    b.ToTable("ProductInCart");

                    b.HasData(
                        new
                        {
                            pic_CartId = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            pic_ProductId = 1,
                            pic_Id = "1d67db26-2b47-4281-b54f-b243096879d7",
                            pic_amount = 2,
                            pic_color = "blue",
                            pic_size = "7"
                        },
                        new
                        {
                            pic_CartId = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            pic_ProductId = 2,
                            pic_Id = "be325610-0e7a-4d84-9183-289d5a9521bb",
                            pic_amount = 3,
                            pic_color = "blue",
                            pic_size = "7.5"
                        },
                        new
                        {
                            pic_CartId = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            pic_ProductId = 3,
                            pic_Id = "e8cc80b9-5cdc-480c-8151-b799e58678ad",
                            pic_amount = 1,
                            pic_color = "blue",
                            pic_size = "8"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.ProductInCartDevices", b =>
                {
                    b.Property<string>("picd_CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("picd_ProductId")
                        .HasColumnType("int");

                    b.Property<int>("picd_amount")
                        .HasColumnType("int");

                    b.Property<string>("picd_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picd_size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("picd_CartId", "picd_ProductId");

                    b.HasIndex("picd_ProductId");

                    b.ToTable("ProductInCartDevices");
                });

            modelBuilder.Entity("WebShoes.Entity.ProductInWishlist", b =>
                {
                    b.Property<int>("piw_WishlistId")
                        .HasColumnType("int");

                    b.Property<int>("piw_ProductId")
                        .HasColumnType("int");

                    b.Property<int>("piw_amount")
                        .HasColumnType("int");

                    b.HasKey("piw_WishlistId", "piw_ProductId");

                    b.HasIndex("piw_ProductId");

                    b.ToTable("ProductInWishlist");

                    b.HasData(
                        new
                        {
                            piw_WishlistId = 1,
                            piw_ProductId = 1,
                            piw_amount = 0
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Products", b =>
                {
                    b.Property<int>("pd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pd_Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_MenuFacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pd_Price")
                        .HasColumnType("int");

                    b.Property<int>("pd_Rate")
                        .HasColumnType("int");

                    b.Property<int>("pd_ReducePrice")
                        .HasColumnType("int");

                    b.Property<string>("pd_ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pd_Size10")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size10_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size11")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size11_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size12")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size12_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size13")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size13_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size14")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size14_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size7")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size7_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size8")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size8_5")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size9")
                        .HasColumnType("bit");

                    b.Property<bool>("pd_Size9_5")
                        .HasColumnType("bit");

                    b.Property<string>("pd_Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Technologies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pd_WaitForConfirmation")
                        .HasColumnType("bit");

                    b.HasKey("pd_Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            pd_Id = 1,
                            pd_Brand = "Off White",
                            pd_Code = "PD001",
                            pd_Color = "Black",
                            pd_Description = "black / purple / red ,cotton, signature arrow pattern, logo print on chest, round neck, short sleeves, straight border",
                            pd_Img1 = "./img/Product1-blue.png",
                            pd_Img2 = "./img/Product1-brown.png",
                            pd_Img3 = "./img/Product1-white.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "OFF-WHITE ARROWS PRINT COTTON SLIM T-SHIRT - BLACK/PURPLE/RED",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 80,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 2,
                            pd_Brand = "Off White",
                            pd_Code = "PD002",
                            pd_Color = "Black",
                            pd_Description = "",
                            pd_Img1 = "./img/Product2-black.jpg",
                            pd_Img2 = "./img/Product2-gray.jpg",
                            pd_Img3 = "./img/Product2-purple.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "OFF-WHITE ARROWS PRINT SHORT-SLEEVE T-SHIRT - BLACK/GREY SS21",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 50,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 3,
                            pd_Brand = "Off White",
                            pd_Code = "PD003",
                            pd_Color = "White/Blue",
                            pd_Description = "White, cotton, signature arrow pattern, logo print on chest, round neck, short sleeves, straight border",
                            pd_Img1 = "./img/Product3-black.jpg",
                            pd_Img2 = "./img/Product3-blue.jpg",
                            pd_Img3 = "./img/Product3-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "OFF-WHITE ARROWS PRINT SHORT-SLEEVE T-SHIRT - WHITE/BLUE SS21",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 40,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 4,
                            pd_Brand = "Andrea Martin",
                            pd_Code = "PD004",
                            pd_Color = "Gray",
                            pd_Description = "",
                            pd_Img1 = "./img/Product4-blue.jpg",
                            pd_Img2 = "./img/Product4-cream.jpg",
                            pd_Img3 = "./img/Product4-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ANDREA MARTIN Grey Astronaut Mesh Shirt",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 90,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "Slim 3-layer mesh top",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 5,
                            pd_Brand = "Burberry",
                            pd_Code = "PD005",
                            pd_Color = "",
                            pd_Description = "- The shirt is made of breathable cotton fabric, good sweat absorption, bringing comfort to the wearer. Beautiful standard shirt form, delicate seams meticulous detail to satisfy even fastidious customers.",
                            pd_Img1 = "./img/Product5-black.jpg",
                            pd_Img2 = "./img/Product5-blue.jpg",
                            pd_Img3 = "./img/Product5-yellow.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "BURBERRY SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 99,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "Shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 6,
                            pd_Brand = "ADLV",
                            pd_Code = "PD006",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product6-black.jpg",
                            pd_Img2 = "./img/Product6-gray.jpg",
                            pd_Img3 = "./img/Product6-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 7,
                            pd_Brand = "Burberry",
                            pd_Code = "PD007",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product7-blue.png",
                            pd_Img2 = "./img/Product7-white.png",
                            pd_Img3 = "./img/Product7-yellow.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "BURBERRY SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "Shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 8,
                            pd_Brand = "eteft",
                            pd_Code = "PD008",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product8-pink.jpg",
                            pd_Img2 = "./img/Product8-white.jpg",
                            pd_Img3 = "./img/Product8-yellow.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "BURBERRY MONOGRAM MOTIF STRETCH COTTON POPLIN SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 9,
                            pd_Brand = "Thom Browne",
                            pd_Code = "PD009",
                            pd_Color = "White",
                            pd_Description = "",
                            pd_Img1 = "./img/Product9-black.png",
                            pd_Img2 = "./img/Product9-blue.png",
                            pd_Img3 = "./img/Product9-red.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "THOM BROWN SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "Shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 10,
                            pd_Brand = "Burberry",
                            pd_Code = "PD010",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product10-blue.png",
                            pd_Img2 = "./img/Product10-pink.jpg",
                            pd_Img3 = "./img/Product10-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "BURBERRY SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "Shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 12,
                            pd_Brand = "eteft",
                            pd_Code = "PD012",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product12-black.jpg",
                            pd_Img2 = "./img/Product12-red.jpg",
                            pd_Img3 = "./img/Product12-yellow.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "BURBERRY SHIRT LIGHT BROWN",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 13,
                            pd_Brand = "eteft",
                            pd_Code = "PD013",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product13-dark-blue.jpg",
                            pd_Img2 = "./img/Product13-green.jpg",
                            pd_Img3 = "./img/Product13-pink.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "BURBERRY SHIRT LIGHT BROWN",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 14,
                            pd_Brand = "Thom Browne",
                            pd_Code = "PD014",
                            pd_Color = "White",
                            pd_Description = "Endless styling opportunities are in store with this Thom Browne shirt. Made from breathable cotton, this piece is both cool and comfortable. Talk about no trouble. Features a button-down collar, front button closure, open front pockets, curved hemline, front logo patch and tricolor stripe detail with buttons on both sleeves",
                            pd_Img1 = "./img/Product14-black.jpg",
                            pd_Img2 = "./img/Product14-white.jpg",
                            pd_Img3 = "./img/Product14-yellow.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "THOM BROWNE WHITE SHORT SLEEVE SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "Shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 15,
                            pd_Brand = "eteft",
                            pd_Code = "PD015",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product15-gray.jpg",
                            pd_Img2 = "./img/Product15-green.jpg",
                            pd_Img3 = "./img/Product15-yellow.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "GUCCI GG STRETCH COTTON POLO - DARK GREEN",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 16,
                            pd_Brand = "Moschino",
                            pd_Code = "PD016",
                            pd_Color = "Black",
                            pd_Description = "",
                            pd_Img1 = "./img/Product16-black.jpg",
                            pd_Img2 = "./img/Product16-red.jpg",
                            pd_Img3 = "./img/Product16-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "MOSCHINO T-SHIRT GOLD LOGO WITH PIG",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "T-shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 17,
                            pd_Brand = "Moschino",
                            pd_Code = "PD017",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product17-black.jpg",
                            pd_Img2 = "./img/Product17-blue.jpg",
                            pd_Img3 = "./img/Product17-gray.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "MOSCHINO TEE WARRIOR",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 18,
                            pd_Brand = "Moschino",
                            pd_Code = "PD018",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product18-gray.jpg",
                            pd_Img2 = "./img/Product18-pink.jpg",
                            pd_Img3 = "./img/Product18-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "MOSCHINO TEE DOLLARS",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 19,
                            pd_Brand = "Moschino",
                            pd_Code = "PD019",
                            pd_Color = "White",
                            pd_Description = "",
                            pd_Img1 = "./img/Product19-blue.jpg",
                            pd_Img2 = "./img/Product19-red.jpg",
                            pd_Img3 = "./img/Product19-yellow.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "MOSCHINO T-SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "T-shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 20,
                            pd_Brand = "Moschino",
                            pd_Code = "PD020",
                            pd_Color = "White",
                            pd_Description = "",
                            pd_Img1 = "./img/Product20-black.jpg",
                            pd_Img2 = "./img/Product20-pink.jpg",
                            pd_Img3 = "./img/Product20-white.jpg",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "MOSCHINO T-SHIRT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "T-shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 21,
                            pd_Brand = "Moschino",
                            pd_Code = "PD021",
                            pd_Color = "Black",
                            pd_Description = "",
                            pd_Img1 = "./img/Product21-blue.png",
                            pd_Img2 = "./img/Product21-cream.png",
                            pd_Img3 = "./img/Product21-gray.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "MOSCHINO T-SHIRT COUTURE",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "T-shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 22,
                            pd_Brand = "Supreme",
                            pd_Code = "PD022",
                            pd_Color = "White",
                            pd_Description = "",
                            pd_Img1 = "./img/Product22-blue.png",
                            pd_Img2 = "./img/Product22-gray.png",
                            pd_Img3 = "./img/Product22-green.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "SUPREME SPIRAL T-SHIRT - WHITE",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "T-shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 23,
                            pd_Brand = "Supreme",
                            pd_Code = "PD023",
                            pd_Color = "Black",
                            pd_Description = "",
                            pd_Img1 = "./img/Product23-black.png",
                            pd_Img2 = "./img/Product23-blue.png",
                            pd_Img3 = "./img/Product23-redjpg.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "SUPREME SPIRAL T-SHIRT - BLACK",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "T-shirt",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 24,
                            pd_Brand = "eteft",
                            pd_Code = "PD024",
                            pd_Color = "",
                            pd_Description = "",
                            pd_Img1 = "./img/Product24-black.png",
                            pd_Img2 = "./img/Product24-blue.png",
                            pd_Img3 = "./img/Product24-brown.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "SUPREME CROSS BOX LOGO T-SHIRT - NAVY",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 25,
                            pd_Brand = "ADLV",
                            pd_Code = "PD025",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product25-black.png",
                            pd_Img2 = "./img/Product25-blue.png",
                            pd_Img3 = "./img/Product25-cream.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV BABY FACE SHORT SLEEVE T-SHIRT BLACK DONUTS 1",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 26,
                            pd_Brand = "ADLV",
                            pd_Code = "PD026",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product26-black.png",
                            pd_Img2 = "./img/Product26-blue.png",
                            pd_Img3 = "./img/Product26-cream.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV BABY FACE SHORT SLEEVE T-SHIRT BLACK ASTRONAUT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 27,
                            pd_Brand = "ADLV",
                            pd_Code = "PD027",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product27-black.png",
                            pd_Img2 = "./img/Product27-gray.png",
                            pd_Img3 = "./img/Product27-purple.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV ASTRONAUT TRIO SHORT SLEEVE T-SHIRT - BLACK",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 28,
                            pd_Brand = "ADLV",
                            pd_Code = "PD028",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product28-black.png",
                            pd_Img2 = "./img/Product28-gray.png",
                            pd_Img3 = "./img/Product28-purple.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV RAINBOW CLOUD LOGO SHORT SLEEVE T-SHIRT BLACK",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 29,
                            pd_Brand = "ADLV",
                            pd_Code = "PD029",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product29-blue.png",
                            pd_Img2 = "./img/Product29-gray.png",
                            pd_Img3 = "./img/Product29-green.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV TEDDY BEAR SHORT SLEEVE T-SHIRT BLACK",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = 30,
                            pd_Brand = "ADLV",
                            pd_Code = "PD030",
                            pd_Color = "",
                            pd_Description = "First born in 2017, ACMÉ DE LA VIE (ADLV) with market understanding and modern designs, in line with the common tastes of urban citizens, has quickly become one of Korea's leading local streetwear brands today.",
                            pd_Img1 = "./img/Product30-black.png",
                            pd_Img2 = "./img/Product30-brown.png",
                            pd_Img3 = "./img/Product30-brown.png",
                            pd_Img4 = "",
                            pd_Material = "1",
                            pd_MenuFacturer = "1",
                            pd_Name = "ADLV BABY FACE SHORT SLEEVE T-SHIRT BLACK RABBIT",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 100,
                            pd_Rate = 5,
                            pd_ReducePrice = 10,
                            pd_ShortDescription = "",
                            pd_Size = "",
                            pd_Size10 = true,
                            pd_Size10_5 = true,
                            pd_Size11 = true,
                            pd_Size11_5 = true,
                            pd_Size12 = true,
                            pd_Size12_5 = true,
                            pd_Size13 = false,
                            pd_Size13_5 = true,
                            pd_Size14 = true,
                            pd_Size14_5 = true,
                            pd_Size7 = true,
                            pd_Size7_5 = true,
                            pd_Size8 = true,
                            pd_Size8_5 = true,
                            pd_Size9 = true,
                            pd_Size9_5 = true,
                            pd_Style = "",
                            pd_Technologies = "1",
                            pd_WaitForConfirmation = false
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.ProductsInCategories", b =>
                {
                    b.Property<int>("pic_productId")
                        .HasColumnType("int");

                    b.Property<int>("pic_CategoriesId")
                        .HasColumnType("int");

                    b.HasKey("pic_productId", "pic_CategoriesId");

                    b.HasIndex("pic_CategoriesId");

                    b.ToTable("ProductsInCategories");

                    b.HasData(
                        new
                        {
                            pic_productId = 12,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 13,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 14,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 15,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 16,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 17,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 18,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 19,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 20,
                            pic_CategoriesId = 1
                        },
                        new
                        {
                            pic_productId = 1,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 2,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 3,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 4,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 5,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 6,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 7,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 8,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 9,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 10,
                            pic_CategoriesId = 2
                        },
                        new
                        {
                            pic_productId = 21,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 22,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 23,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 24,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 25,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 26,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 27,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 28,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 29,
                            pic_CategoriesId = 5
                        },
                        new
                        {
                            pic_productId = 30,
                            pic_CategoriesId = 5
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.ReviewInproduct", b =>
                {
                    b.Property<int>("rip_ProductId")
                        .HasColumnType("int");

                    b.Property<string>("rip_ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("rip_ProductId", "rip_ReviewId");

                    b.HasIndex("rip_ReviewId");

                    b.ToTable("ReviewInproduct");

                    b.HasData(
                        new
                        {
                            rip_ProductId = 1,
                            rip_ReviewId = "EEBA6608-AB75-4E83-909F-604B1A06F16C"
                        },
                        new
                        {
                            rip_ProductId = 1,
                            rip_ReviewId = "9EED8607-D2BB-45EE-AEE3-C59D858A7F97"
                        },
                        new
                        {
                            rip_ProductId = 1,
                            rip_ReviewId = "C2A543C2-B1E2-4DC5-A131-9137E4673FA6"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Reviews", b =>
                {
                    b.Property<string>("review_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("review_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("review_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("review_ReviewType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("review_UploadTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("review_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("review_id");

                    b.HasIndex("review_UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            review_id = "EEBA6608-AB75-4E83-909F-604B1A06F16C",
                            review_Comment = "Test",
                            review_HideStatus = false,
                            review_ReviewType = "Review",
                            review_UploadTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            review_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        },
                        new
                        {
                            review_id = "9EED8607-D2BB-45EE-AEE3-C59D858A7F97",
                            review_Comment = "Test",
                            review_HideStatus = false,
                            review_ReviewType = "Review",
                            review_UploadTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            review_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff"
                        },
                        new
                        {
                            review_id = "C2A543C2-B1E2-4DC5-A131-9137E4673FA6",
                            review_Comment = "Test",
                            review_HideStatus = false,
                            review_ReviewType = "Review",
                            review_UploadTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            review_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Shipping", b =>
                {
                    b.Property<string>("ship_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ship_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ship_Price")
                        .HasColumnType("int");

                    b.HasKey("ship_Id");

                    b.ToTable("Shipping");

                    b.HasData(
                        new
                        {
                            ship_Id = "7CF94A7D-9239-446E-A404-086518F84652",
                            ship_Name = "Ship",
                            ship_Price = 1
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.SliderHome", b =>
                {
                    b.Property<string>("SliderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SliderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderUrl4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderUrl5")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SliderId");

                    b.ToTable("SliderHome");

                    b.HasData(
                        new
                        {
                            SliderId = "27078067-fc0d-4700-8a79-8e8407411f06",
                            SliderName = "SliderHome1",
                            SliderUrl1 = "https://drive.google.com/uc?export=download&id=1z9XgREv00FGoCR7zke-NzoNnIBiQYqvM",
                            SliderUrl2 = "https://drive.google.com/uc?export=download&id=15xcKBMdxJeQMTLaQjHh9KbT6ZlKGsaZv",
                            SliderUrl3 = "https://drive.google.com/uc?export=download&id=1q3-Sg09LDSshwDBe3WVOTlcx0QmP-0tT",
                            SliderUrl4 = "",
                            SliderUrl5 = ""
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.SubReview", b =>
                {
                    b.Property<string>("subReview_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("subReview_Commnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("subReview_DateCommnet")
                        .HasColumnType("datetime2");

                    b.Property<bool>("subReview_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("subReview_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("subreview_SubReviewType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subReview_Id");

                    b.HasIndex("subReview_UserId");

                    b.ToTable("SubReview");

                    b.HasData(
                        new
                        {
                            subReview_Id = "f998bff9-3cef-4e18-94c9-ab11db926d5d",
                            subReview_Commnet = "subreview 1",
                            subReview_DateCommnet = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            subReview_HideStatus = false,
                            subReview_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            subreview_SubReviewType = "SubReview"
                        },
                        new
                        {
                            subReview_Id = "0430ae88-db4f-45d7-83a5-c11533d9841a",
                            subReview_Commnet = "subreview 3",
                            subReview_DateCommnet = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            subReview_HideStatus = false,
                            subReview_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            subreview_SubReviewType = "SubReview"
                        },
                        new
                        {
                            subReview_Id = "d279fb6a-7006-40f3-bfff-5ffff527b56c",
                            subReview_Commnet = "subreview 3",
                            subReview_DateCommnet = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            subReview_HideStatus = false,
                            subReview_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            subreview_SubReviewType = "SubReview"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.SubReviewInReview", b =>
                {
                    b.Property<string>("SRiR_ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SRiR_SubReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SRiR_ReviewId", "SRiR_SubReviewId");

                    b.HasIndex("SRiR_SubReviewId");

                    b.ToTable("SubReviewInReview");

                    b.HasData(
                        new
                        {
                            SRiR_ReviewId = "EEBA6608-AB75-4E83-909F-604B1A06F16C",
                            SRiR_SubReviewId = "f998bff9-3cef-4e18-94c9-ab11db926d5d"
                        },
                        new
                        {
                            SRiR_ReviewId = "EEBA6608-AB75-4E83-909F-604B1A06F16C",
                            SRiR_SubReviewId = "0430ae88-db4f-45d7-83a5-c11533d9841a"
                        },
                        new
                        {
                            SRiR_ReviewId = "9EED8607-D2BB-45EE-AEE3-C59D858A7F97",
                            SRiR_SubReviewId = "d279fb6a-7006-40f3-bfff-5ffff527b56c"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.Subscribers", b =>
                {
                    b.Property<string>("Subs_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subs_Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Subs_TimeUpdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Subs_Id");

                    b.ToTable("Subsriber");
                });

            modelBuilder.Entity("WebShoes.Entity.Wishlists", b =>
                {
                    b.Property<int>("wl_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("wl_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("wl_Id");

                    b.HasIndex("wl_UserId");

                    b.ToTable("Wishlists");

                    b.HasData(
                        new
                        {
                            wl_Id = 1,
                            wl_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff"
                        });
                });

            modelBuilder.Entity("WebShoes.Models.UserInRoleModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserInRoleModel");
                });

            modelBuilder.Entity("WebShoes.Entity.AppRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppRole");

                    b.HasData(
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd",
                            ConcurrencyStamp = "81ca6b68-fd88-4dec-aa44-3213aa109968",
                            Name = "Staff",
                            NormalizedName = "STAFF",
                            Description = "Staff"
                        },
                        new
                        {
                            Id = "360E601E-92F2-4F08-832B-604A21293258",
                            ConcurrencyStamp = "a0c1b3b5-0647-41ba-b317-6d2f30a9c674",
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            Description = "Admin"
                        });
                });

            modelBuilder.Entity("WebShoes.Entity.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_State")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppUser");

                    b.HasData(
                        new
                        {
                            Id = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6386d690-9238-4c4a-bfee-c096fa48e734",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEF77WGYdFQMuPX+bdwCtGbtIQvtl/3hjKb8M00C29QX52y+9q3YCmEAjKkTe7SegMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4ed879c9-1757-4580-ac81-bb1d5285e5eb",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            DoB = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "admin",
                            LastName = "admin",
                            bill_Address1 = "HCM 1",
                            bill_Address2 = "HCM 2",
                            bill_City = "HCM",
                            bill_CompanyName = "0123456789",
                            bill_Country = "Viet Nam",
                            bill_PhoneNumber = "0112223344",
                            bill_PostalCode = "700000",
                            bill_State = "700000"
                        },
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9456ad97-acf2-4959-af0a-12db5af84912",
                            Email = "staff@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "STAFF@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELr/CoaD1xkv04AWdcPvLzl4b6GLDPU1nDOR+JYeB7txajZFx86yjU0Gl/TrwxaSTw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fe34e480-4de2-4d3c-8afd-d2143f890624",
                            TwoFactorEnabled = false,
                            UserName = "Staff",
                            DoB = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "staff",
                            LastName = "staff"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebShoes.Entity.Bills", b =>
                {
                    b.HasOne("WebShoes.Entity.AppUser", "AppUserB")
                        .WithMany("BillsAU")
                        .HasForeignKey("bill_UserId");

                    b.Navigation("AppUserB");
                });

            modelBuilder.Entity("WebShoes.Entity.Cart", b =>
                {
                    b.HasOne("WebShoes.Entity.AppUser", "AppUserC")
                        .WithMany("CartU")
                        .HasForeignKey("cart_UserID");

                    b.Navigation("AppUserC");
                });

            modelBuilder.Entity("WebShoes.Entity.CartsDevice", b =>
                {
                    b.HasOne("WebShoes.Entity.Device", "DeviceCD")
                        .WithMany("CartsDeviceD")
                        .HasForeignKey("cartd_DeviceId");

                    b.Navigation("DeviceCD");
                });

            modelBuilder.Entity("WebShoes.Entity.ProductInCart", b =>
                {
                    b.HasOne("WebShoes.Entity.Cart", "CartPICart")
                        .WithMany("ProductInCartC")
                        .HasForeignKey("pic_CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoes.Entity.Products", "ProductsPICart")
                        .WithMany("ProductInCartP")
                        .HasForeignKey("pic_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartPICart");

                    b.Navigation("ProductsPICart");
                });

            modelBuilder.Entity("WebShoes.Entity.ProductInCartDevices", b =>
                {
                    b.HasOne("WebShoes.Entity.CartsDevice", "CartsDevicePICD")
                        .WithMany("ProductInCartDevicesCD")
                        .HasForeignKey("picd_CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoes.Entity.Products", "ProductsPICD")
                        .WithMany("ProductInCartDevicesP")
                        .HasForeignKey("picd_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartsDevicePICD");

                    b.Navigation("ProductsPICD");
                });

            modelBuilder.Entity("WebShoes.Entity.ProductInWishlist", b =>
                {
                    b.HasOne("WebShoes.Entity.Products", "ProductsPIW")
                        .WithMany("ProductInWishlistP")
                        .HasForeignKey("piw_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoes.Entity.Wishlists", "WishlistsPIW")
                        .WithMany("ProductInWishlistW")
                        .HasForeignKey("piw_WishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsPIW");

                    b.Navigation("WishlistsPIW");
                });

            modelBuilder.Entity("WebShoes.Entity.ProductsInCategories", b =>
                {
                    b.HasOne("WebShoes.Entity.Categories", "CategoriesPIC")
                        .WithMany("ProductsInCategoriesC")
                        .HasForeignKey("pic_CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoes.Entity.Products", "ProductsPIC")
                        .WithMany("ProductsInCategoriesP")
                        .HasForeignKey("pic_productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriesPIC");

                    b.Navigation("ProductsPIC");
                });

            modelBuilder.Entity("WebShoes.Entity.ReviewInproduct", b =>
                {
                    b.HasOne("WebShoes.Entity.Products", "ProductsRIP")
                        .WithMany("ReviewInproductP")
                        .HasForeignKey("rip_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoes.Entity.Reviews", "ReviewsRIP")
                        .WithMany("ReviewInproductR")
                        .HasForeignKey("rip_ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsRIP");

                    b.Navigation("ReviewsRIP");
                });

            modelBuilder.Entity("WebShoes.Entity.Reviews", b =>
                {
                    b.HasOne("WebShoes.Entity.AppUser", "AppUserR")
                        .WithMany("ReviewsU")
                        .HasForeignKey("review_UserId");

                    b.Navigation("AppUserR");
                });

            modelBuilder.Entity("WebShoes.Entity.SubReview", b =>
                {
                    b.HasOne("WebShoes.Entity.AppUser", "AppUserSR")
                        .WithMany("SubReviewSR")
                        .HasForeignKey("subReview_UserId");

                    b.Navigation("AppUserSR");
                });

            modelBuilder.Entity("WebShoes.Entity.SubReviewInReview", b =>
                {
                    b.HasOne("WebShoes.Entity.Reviews", "Reviews")
                        .WithMany("SubReviewInReview")
                        .HasForeignKey("SRiR_ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShoes.Entity.SubReview", "SubReview")
                        .WithMany("SubReviewInReview")
                        .HasForeignKey("SRiR_SubReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reviews");

                    b.Navigation("SubReview");
                });

            modelBuilder.Entity("WebShoes.Entity.Wishlists", b =>
                {
                    b.HasOne("WebShoes.Entity.AppUser", "UserW")
                        .WithMany("WishlistsU")
                        .HasForeignKey("wl_UserId");

                    b.Navigation("UserW");
                });

            modelBuilder.Entity("WebShoes.Entity.Cart", b =>
                {
                    b.Navigation("ProductInCartC");
                });

            modelBuilder.Entity("WebShoes.Entity.CartsDevice", b =>
                {
                    b.Navigation("ProductInCartDevicesCD");
                });

            modelBuilder.Entity("WebShoes.Entity.Categories", b =>
                {
                    b.Navigation("ProductsInCategoriesC");
                });

            modelBuilder.Entity("WebShoes.Entity.Device", b =>
                {
                    b.Navigation("CartsDeviceD");
                });

            modelBuilder.Entity("WebShoes.Entity.Products", b =>
                {
                    b.Navigation("ProductInCartDevicesP");

                    b.Navigation("ProductInCartP");

                    b.Navigation("ProductInWishlistP");

                    b.Navigation("ProductsInCategoriesP");

                    b.Navigation("ReviewInproductP");
                });

            modelBuilder.Entity("WebShoes.Entity.Reviews", b =>
                {
                    b.Navigation("ReviewInproductR");

                    b.Navigation("SubReviewInReview");
                });

            modelBuilder.Entity("WebShoes.Entity.SubReview", b =>
                {
                    b.Navigation("SubReviewInReview");
                });

            modelBuilder.Entity("WebShoes.Entity.Wishlists", b =>
                {
                    b.Navigation("ProductInWishlistW");
                });

            modelBuilder.Entity("WebShoes.Entity.AppUser", b =>
                {
                    b.Navigation("BillsAU");

                    b.Navigation("CartU");

                    b.Navigation("ReviewsU");

                    b.Navigation("SubReviewSR");

                    b.Navigation("WishlistsU");
                });
#pragma warning restore 612, 618
        }
    }
}
